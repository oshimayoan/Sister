/*
 * Copyright (C) 2014 Yoan Pratama Putra
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package client;

import fridge.RMI;
import static java.lang.Thread.sleep;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;

/**
 *
 * @author Yoan Pratama Putra
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private static RMI rmi = null;
    private static Registry reg = null;
    private static int temperature = 0;
    private static int connectFlag = 1; // untuk menandakan percobaan pertama atau bukan
    
    public Main() {
        initComponents();
        this.setTitle("Client");
    }
    
    public static void ConnectServer() {
        try {
            // membuat koneksi ke kulkas
            reg = LocateRegistry.getRegistry("127.0.0.1", 1099);
            rmi = (RMI) reg.lookup("server");
                
            // ubah status menjadi connected
            lblConnectStatus.setText("Connected");

            if(connectFlag == 1) {
                // ambil suhu kulkas saat ini
                temperature = rmi.getTemperature();
                txtTemperature.setValue(temperature);
                connectFlag++;
            }
        } catch(Exception ex) {
            // ubah status menjadi not connected
            lblConnectStatus.setText("Not Connected");
            
            // unset reg dan rmi
            reg = null;
            rmi = null;
            
            // kembalikan nilai connectFlag ke 1
            connectFlag = 1;
            
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnChange = new javax.swing.JButton();
        lblCelcius = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        lblConnectStatus = new javax.swing.JLabel();
        btnRefreshTemp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnChange.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnChange.setText("Change");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        lblCelcius.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblCelcius.setText("Â°C");

        txtTemperature.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtTemperature.setModel(new javax.swing.SpinnerNumberModel(4, -20, 4, 1));
        txtTemperature.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtTemperatureStateChanged(evt);
            }
        });

        lblConnectStatus.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblConnectStatus.setText("Not Connected");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConnectStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblConnectStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        btnRefreshTemp.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnRefreshTemp.setText("Refresh");
        btnRefreshTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTempActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(157, Short.MAX_VALUE)
                .addComponent(btnRefreshTemp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCelcius)
                .addGap(5, 5, 5)
                .addComponent(btnChange)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChange)
                    .addComponent(lblCelcius)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshTemp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        // kirim suhu baru ke kulkas
        try {
            int temp = Integer.parseInt(txtTemperature.getValue().toString());
            try {
                rmi.setTemperature(temp);
            } catch(Exception ex) {
                System.out.println(ex);
            }
        } catch(Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnChangeActionPerformed

    private void txtTemperatureStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtTemperatureStateChanged
        // mengubah suhu
        temperature = Integer.parseInt(txtTemperature.getValue().toString());
    }//GEN-LAST:event_txtTemperatureStateChanged

    private void btnRefreshTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTempActionPerformed
        // refresh suhu dari kulkas
        try {
            temperature = rmi.getTemperature();
            txtTemperature.setValue(temperature);
        } catch(Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnRefreshTempActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                
                // buat dan jalankan thread koneksi
                connectThread conThread = new connectThread();
                conThread.start();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnRefreshTemp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCelcius;
    private static javax.swing.JLabel lblConnectStatus;
    private static javax.swing.JSpinner txtTemperature;
    // End of variables declaration//GEN-END:variables
}
